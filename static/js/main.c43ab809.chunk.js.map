{"version":3,"sources":["comp/Comments.js","comp/Navbar.js","comp/Posts.js","comp/Users.js","App.js","reportWebVitals.js","index.js"],"names":["Comments","items","map","item","className","id","style","fontWeight","name","body","Navbar","setResourceType","onClick","Posts","fontSize","title","Users","email","phone","website","App","useState","resourceType","setItems","err","setErr","errMsg","setErrMsg","useEffect","fetch","then","response","json","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAoBeA,EAlBE,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClB,OACE,8BACGA,EAAMC,KAAI,SAACC,GAAD,OACT,sBAAKC,UAAU,UAAf,UACE,8BACE,iCAAOD,EAAKE,GAAZ,QADF,iBAEiB,IACf,sBAAMC,MAAO,CAAEC,WAAY,OAA3B,SAAqCJ,EAAKK,UAG5C,4BAAIL,EAAKM,SAPmBN,EAAKE,UCmB5BK,EAvBA,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBAChB,OACE,sBAAKP,UAAU,SAAf,UACE,qBAAKA,UAAU,OAAf,SACE,wDAEF,sBAAKA,UAAU,OAAf,UACE,yBAAQQ,QAAS,kBAAMD,EAAgB,UAAvC,mBACQ,mBAAGP,UAAU,wBAGrB,yBAAQQ,QAAS,kBAAMD,EAAgB,UAAvC,mBACQ,mBAAGP,UAAU,oBAGrB,yBAAQQ,QAAS,kBAAMD,EAAgB,aAAvC,sBACW,mBAAGP,UAAU,8BCEjBS,EAlBD,SAAC,GAAe,IAAbZ,EAAY,EAAZA,MACf,OACE,8BACGA,EAAMC,KAAI,SAACC,GAAD,OACT,sBAAKC,UAAU,OAAf,UACE,+BACE,uBAAME,MAAO,CAAEQ,SAAU,OAAQP,WAAY,OAA7C,UACGJ,EAAKE,GADR,QAGCF,EAAKY,SAER,4BAAIZ,EAAKM,SAPgBN,EAAKE,UCWzBW,EAfD,SAAC,GAAe,IAAbf,EAAY,EAAZA,MACf,OACE,8BACGA,EAAMC,KAAI,SAACC,GAAD,OACT,sBAAKC,UAAU,OAAf,UACE,yCAAYD,EAAKK,QACjB,yCAAYL,EAAKc,SACjB,yCAAYd,EAAKe,SACjB,2CAAcf,EAAKgB,aAJMhB,EAAKE,UCmCzBe,MAlCf,WAAgB,IAAD,EAC2BC,mBAAS,SADpC,mBACNC,EADM,KACQX,EADR,OAEaU,mBAAS,IAFtB,mBAENpB,EAFM,KAECsB,EAFD,OAGSF,oBAAS,GAHlB,mBAGNG,EAHM,KAGDC,EAHC,OAIeJ,mBAAS,IAJxB,mBAINK,EAJM,KAIEC,EAJF,KAgBb,OAVAC,qBAAU,WACRC,MAAM,wCAAD,OAAyCP,IAC3CQ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GAAD,OAAUT,EAASS,MACxBC,OAAM,SAACC,GACNT,GAAO,GACPE,EAAU,GAAKO,QAElB,CAACZ,IAGF,qBAAKlB,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,cAAC,EAAD,CAAQO,gBAAiBA,IACzB,6BAAKW,IACa,UAAjBA,GAA4B,cAAC,EAAD,CAAOrB,MAAOA,IACzB,UAAjBqB,GAA4B,cAAC,EAAD,CAAOrB,MAAOA,IACzB,aAAjBqB,GAA+B,cAAC,EAAD,CAAUrB,MAAOA,IAChDuB,GACC,gCACGE,EADH,aACqBJ,WCrBhBa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.c43ab809.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Comments = ({ items }) => {\r\n  return (\r\n    <div>\r\n      {items.map((item) => (\r\n        <div className=\"comment\" key={item.id}>\r\n          <p>\r\n            <span>{item.id} .</span>\r\n            Commented by :{\" \"}\r\n            <span style={{ fontWeight: \"600\" }}>{item.name}</span>\r\n          </p>\r\n\r\n          <p>{item.body}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n","import React from \"react\";\r\n\r\nconst Navbar = ({ setResourceType }) => {\r\n  return (\r\n    <div className=\"navbar\">\r\n      <div className=\"logo\">\r\n        <h1>React Hooks Practice</h1>\r\n      </div>\r\n      <div className=\"btns\">\r\n        <button onClick={() => setResourceType(\"Posts\")}>\r\n          Posts <i className=\"fas fa-newspaper\"></i>\r\n        </button>\r\n\r\n        <button onClick={() => setResourceType(\"Users\")}>\r\n          Users <i className=\"fas fa-users\"></i>\r\n        </button>\r\n\r\n        <button onClick={() => setResourceType(\"Comments\")}>\r\n          Comments <i className=\"fas fa-comments\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nconst Posts = ({ items }) => {\r\n  return (\r\n    <div>\r\n      {items.map((item) => (\r\n        <div className=\"post\" key={item.id}>\r\n          <h4>\r\n            <span style={{ fontSize: \"16px\", fontWeight: \"400\" }}>\r\n              {item.id} .\r\n            </span>\r\n            {item.title}\r\n          </h4>\r\n          <p>{item.body}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import React from \"react\";\r\n\r\nconst Users = ({ items }) => {\r\n  return (\r\n    <div>\r\n      {items.map((item) => (\r\n        <div className=\"user\" key={item.id}>\r\n          <h4>Name : {item.name}</h4>\r\n          <p>Email : {item.email}</p>\r\n          <p>Phone : {item.phone}</p>\r\n          <p>Website : {item.website}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Comments from \"./comp/Comments\";\nimport Navbar from \"./comp/Navbar\";\nimport Posts from \"./comp/Posts\";\nimport Users from \"./comp/Users\";\n\nfunction App() {\n  const [resourceType, setResourceType] = useState(\"Users\");\n  const [items, setItems] = useState([]);\n  const [err, setErr] = useState(false);\n  const [errMsg, setErrMsg] = useState([]);\n\n  useEffect(() => {\n    fetch(`https://jsonplaceholder.typicode.com/${resourceType}`)\n      .then((response) => response.json())\n      .then((json) => setItems(json))\n      .catch((error) => {\n        setErr(true);\n        setErrMsg(\"\" + error);\n      });\n  }, [resourceType]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Navbar setResourceType={setResourceType} />\n        <h1>{resourceType}</h1>\n        {resourceType === \"Posts\" && <Posts items={items} />}\n        {resourceType === \"Users\" && <Users items={items} />}\n        {resourceType === \"Comments\" && <Comments items={items} />}\n        {err && (\n          <div>\n            {errMsg} data for {resourceType}\n          </div>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}